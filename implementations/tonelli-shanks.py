def is_quadratic_residue(n, p):
    if n % p == 0:
        return 0
    else:
        return pow(n, (p - 1) // 2, p)

def tonelli_shanks(n, p):
    # Check if n is quadratic residue
    if not is_quadratic_residue(n, p):
        return None

    # Factoring (p - 1) over powers of 2 ==> (p - 1) = q * 2^s
    s = 0
    q = (p - 1)
    while (q % 2 == 0):
        s += 1
        q //= 2

    # Finding a non-residue element 'z'
    z = 2
    while is_quadratic_residue(z, p) == 1:
        z += 1

    # Initialization
    m = s
    c = pow(z, q, p)
    t = pow(n, q, p)
    r = pow(n, (q + 1) // 2, p)

    while t != 1:
        # Finding least i such that t^2^i = 1
        i = 0
        temp = t
        while temp != 1:
            i += 1
            temp = pow(temp, 2, p)

        expoent_c = pow(2, (m - i - 1), p)
        b = pow(c, expoent_c, p)
        m = i
        c = pow(b, 2, p)
        t = t * c % p
        r = r * b % p

    return r

if __name__ == "__main__":
    n = 8479994658316772151941616510097127087554541274812435112009425778595495359700244470400642403747058566807127814165396640215844192327900454116257979487432016769329970767046735091249898678088061634796559556704959846424131820416048436501387617211770124292793308079214153179977624440438616958575058361193975686620046439877308339989295604537867493683872778843921771307305602776398786978353866231661453376056771972069776398999013769588936194859344941268223184197231368887060609212875507518936172060702209557124430477137421847130682601666968691651447236917018634902407704797328509461854842432015009878011354022108661461024768
    p = 30531851861994333252675935111487950694414332763909083514133769861350960895076504687261369815735742549428789138300843082086550059082835141454526618160634109969195486322015775943030060449557090064811940139431735209185996454739163555910726493597222646855506445602953689527405362207926990442391705014604777038685880527537489845359101552442292804398472642356609304810680731556542002301547846635101455995732584071355903010856718680732337369128498655255277003643669031694516851390505923416710601212618443109844041514942401969629158975457079026906304328749039997262960301209158175920051890620947063936347307238412281568760161
    result = tonelli_shanks(n, p)
    if result != None:
        print(f"The first square root found is {result}.")


